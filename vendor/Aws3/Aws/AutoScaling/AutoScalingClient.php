<?php
namespace ClikIT\Infinite_Uploads\Aws\AutoScaling;

use ClikIT\Infinite_Uploads\Aws\AwsClient;

/**
 * Auto Scaling client.
 *
 * @method \ClikIT\Infinite_Uploads\Aws\Result attachInstances(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise attachInstancesAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result attachLoadBalancerTargetGroups(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise attachLoadBalancerTargetGroupsAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result attachLoadBalancers(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise attachLoadBalancersAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result attachTrafficSources(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise attachTrafficSourcesAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result batchDeleteScheduledAction(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise batchDeleteScheduledActionAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result batchPutScheduledUpdateGroupAction(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise batchPutScheduledUpdateGroupActionAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result cancelInstanceRefresh(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise cancelInstanceRefreshAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result completeLifecycleAction(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise completeLifecycleActionAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result createAutoScalingGroup(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise createAutoScalingGroupAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result createLaunchConfiguration(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise createLaunchConfigurationAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result createOrUpdateTags(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise createOrUpdateTagsAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result deleteAutoScalingGroup(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise deleteAutoScalingGroupAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result deleteLaunchConfiguration(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise deleteLaunchConfigurationAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result deleteLifecycleHook(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise deleteLifecycleHookAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result deleteNotificationConfiguration(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise deleteNotificationConfigurationAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result deletePolicy(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise deletePolicyAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result deleteScheduledAction(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise deleteScheduledActionAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result deleteTags(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise deleteTagsAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result deleteWarmPool(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise deleteWarmPoolAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeAccountLimits(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeAccountLimitsAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeAdjustmentTypes(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeAdjustmentTypesAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeAutoScalingGroups(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeAutoScalingGroupsAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeAutoScalingInstances(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeAutoScalingInstancesAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeAutoScalingNotificationTypes(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeAutoScalingNotificationTypesAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeInstanceRefreshes(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeInstanceRefreshesAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeLaunchConfigurations(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeLaunchConfigurationsAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeLifecycleHookTypes(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeLifecycleHookTypesAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeLifecycleHooks(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeLifecycleHooksAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeLoadBalancerTargetGroups(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeLoadBalancerTargetGroupsAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeLoadBalancers(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeLoadBalancersAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeMetricCollectionTypes(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeMetricCollectionTypesAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeNotificationConfigurations(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeNotificationConfigurationsAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describePolicies(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describePoliciesAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeScalingActivities(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeScalingActivitiesAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeScalingProcessTypes(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeScalingProcessTypesAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeScheduledActions(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeScheduledActionsAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeTags(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeTagsAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeTerminationPolicyTypes(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeTerminationPolicyTypesAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeTrafficSources(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeTrafficSourcesAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeWarmPool(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeWarmPoolAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result detachInstances(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise detachInstancesAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result detachLoadBalancerTargetGroups(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise detachLoadBalancerTargetGroupsAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result detachLoadBalancers(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise detachLoadBalancersAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result detachTrafficSources(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise detachTrafficSourcesAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result disableMetricsCollection(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise disableMetricsCollectionAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result enableMetricsCollection(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise enableMetricsCollectionAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result enterStandby(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise enterStandbyAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result executePolicy(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise executePolicyAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result exitStandby(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise exitStandbyAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result getPredictiveScalingForecast(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise getPredictiveScalingForecastAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result putLifecycleHook(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise putLifecycleHookAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result putNotificationConfiguration(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise putNotificationConfigurationAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result putScalingPolicy(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise putScalingPolicyAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result putScheduledUpdateGroupAction(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise putScheduledUpdateGroupActionAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result putWarmPool(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise putWarmPoolAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result recordLifecycleActionHeartbeat(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise recordLifecycleActionHeartbeatAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result resumeProcesses(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise resumeProcessesAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result rollbackInstanceRefresh(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise rollbackInstanceRefreshAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result setDesiredCapacity(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise setDesiredCapacityAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result setInstanceHealth(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise setInstanceHealthAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result setInstanceProtection(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise setInstanceProtectionAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result startInstanceRefresh(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise startInstanceRefreshAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result suspendProcesses(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise suspendProcessesAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result terminateInstanceInAutoScalingGroup(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise terminateInstanceInAutoScalingGroupAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result updateAutoScalingGroup(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise updateAutoScalingGroupAsync(array $args = [])
 */
class AutoScalingClient extends AwsClient {}
