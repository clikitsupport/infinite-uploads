<?php
namespace ClikIT\Infinite_Uploads\Aws\SecurityLake;

use ClikIT\Infinite_Uploads\Aws\AwsClient;

/**
 * This client is used to interact with the **Amazon Security Lake** service.
 * @method \ClikIT\Infinite_Uploads\Aws\Result createAwsLogSource(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise createAwsLogSourceAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result createCustomLogSource(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise createCustomLogSourceAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result createDataLake(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise createDataLakeAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result createDataLakeExceptionSubscription(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise createDataLakeExceptionSubscriptionAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result createDataLakeOrganizationConfiguration(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise createDataLakeOrganizationConfigurationAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result createSubscriber(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise createSubscriberAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result createSubscriberNotification(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise createSubscriberNotificationAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result deleteAwsLogSource(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise deleteAwsLogSourceAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result deleteCustomLogSource(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise deleteCustomLogSourceAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result deleteDataLake(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise deleteDataLakeAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result deleteDataLakeExceptionSubscription(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise deleteDataLakeExceptionSubscriptionAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result deleteDataLakeOrganizationConfiguration(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise deleteDataLakeOrganizationConfigurationAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result deleteSubscriber(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise deleteSubscriberAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result deleteSubscriberNotification(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise deleteSubscriberNotificationAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result deregisterDataLakeDelegatedAdministrator(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise deregisterDataLakeDelegatedAdministratorAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result getDataLakeExceptionSubscription(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise getDataLakeExceptionSubscriptionAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result getDataLakeOrganizationConfiguration(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise getDataLakeOrganizationConfigurationAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result getDataLakeSources(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise getDataLakeSourcesAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result getSubscriber(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise getSubscriberAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result listDataLakeExceptions(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise listDataLakeExceptionsAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result listDataLakes(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise listDataLakesAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result listLogSources(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise listLogSourcesAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result listSubscribers(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise listSubscribersAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result listTagsForResource(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise listTagsForResourceAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result registerDataLakeDelegatedAdministrator(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise registerDataLakeDelegatedAdministratorAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result tagResource(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise tagResourceAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result untagResource(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise untagResourceAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result updateDataLake(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise updateDataLakeAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result updateDataLakeExceptionSubscription(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise updateDataLakeExceptionSubscriptionAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result updateSubscriber(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise updateSubscriberAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result updateSubscriberNotification(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise updateSubscriberNotificationAsync(array $args = [])
 */
class SecurityLakeClient extends AwsClient {}
