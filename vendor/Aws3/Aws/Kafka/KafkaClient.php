<?php
namespace ClikIT\Infinite_Uploads\Aws\Kafka;

use ClikIT\Infinite_Uploads\Aws\AwsClient;

/**
 * This client is used to interact with the **Managed Streaming for Kafka** service.
 * @method \ClikIT\Infinite_Uploads\Aws\Result batchAssociateScramSecret(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise batchAssociateScramSecretAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result createCluster(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise createClusterAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result createClusterV2(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise createClusterV2Async(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result createConfiguration(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise createConfigurationAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result createReplicator(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise createReplicatorAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result createVpcConnection(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise createVpcConnectionAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result deleteCluster(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise deleteClusterAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result deleteConfiguration(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise deleteConfigurationAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result deleteReplicator(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise deleteReplicatorAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result deleteVpcConnection(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise deleteVpcConnectionAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeCluster(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeClusterAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeClusterV2(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeClusterV2Async(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeClusterOperation(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeClusterOperationAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeClusterOperationV2(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeClusterOperationV2Async(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeConfiguration(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeConfigurationAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeConfigurationRevision(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeConfigurationRevisionAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeReplicator(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeReplicatorAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result describeVpcConnection(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise describeVpcConnectionAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result batchDisassociateScramSecret(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise batchDisassociateScramSecretAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result getBootstrapBrokers(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise getBootstrapBrokersAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result getCompatibleKafkaVersions(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise getCompatibleKafkaVersionsAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result listClusterOperations(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise listClusterOperationsAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result listClusterOperationsV2(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise listClusterOperationsV2Async(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result listClusters(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise listClustersAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result listClustersV2(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise listClustersV2Async(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result listConfigurationRevisions(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise listConfigurationRevisionsAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result listConfigurations(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise listConfigurationsAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result listKafkaVersions(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise listKafkaVersionsAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result listNodes(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise listNodesAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result listReplicators(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise listReplicatorsAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result listScramSecrets(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise listScramSecretsAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result listTagsForResource(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise listTagsForResourceAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result listClientVpcConnections(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise listClientVpcConnectionsAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result listVpcConnections(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise listVpcConnectionsAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result rejectClientVpcConnection(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise rejectClientVpcConnectionAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result deleteClusterPolicy(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise deleteClusterPolicyAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result getClusterPolicy(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise getClusterPolicyAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result putClusterPolicy(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise putClusterPolicyAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result rebootBroker(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise rebootBrokerAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result tagResource(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise tagResourceAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result untagResource(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise untagResourceAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result updateBrokerCount(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise updateBrokerCountAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result updateBrokerType(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise updateBrokerTypeAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result updateBrokerStorage(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise updateBrokerStorageAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result updateConfiguration(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise updateConfigurationAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result updateClusterConfiguration(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise updateClusterConfigurationAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result updateClusterKafkaVersion(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise updateClusterKafkaVersionAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result updateConnectivity(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise updateConnectivityAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result updateMonitoring(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise updateMonitoringAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result updateReplicationInfo(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise updateReplicationInfoAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result updateSecurity(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise updateSecurityAsync(array $args = [])
 * @method \ClikIT\Infinite_Uploads\Aws\Result updateStorage(array $args = [])
 * @method \ClikIT\Infinite_Uploads\GuzzleHttp\Promise\Promise updateStorageAsync(array $args = [])
 */
class KafkaClient extends AwsClient {}
